// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var FRP_Event = require("../FRP.Event");
var FRP_Event_Class = require("../FRP.Event.Class");
var Prelude = require("../Prelude");
var debounceWith = function (process) {
    return function (event) {
        var stamped = $foreign.withTime(event);
        return FRP_Event_Class.fix(FRP_Event.eventIsEvent)(function (allowed) {
            var processed = process(allowed);
            var expiries = Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                return v.time + v.value;
            })($foreign.withTime(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                return v.period;
            })(processed)));
            var comparison = function (a) {
                return function (b) {
                    return Data_Maybe.maybe(true)(function (v) {
                        return v < b.time;
                    })(a);
                };
            };
            var unblocked = FRP_Event_Class.gateBy(FRP_Event.eventIsEvent)(comparison)(expiries)(stamped);
            return {
                input: Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                    return v.value;
                })(unblocked),
                output: Data_Functor.map(FRP_Event.functorEvent)(function (v) {
                    return v.value;
                })(processed)
            };
        });
    };
};
var debounce = function (period) {
    return debounceWith(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return {
            period: period,
            value: v
        };
    }));
};
module.exports = {
    debounce: debounce,
    debounceWith: debounceWith,
    interval: $foreign.interval,
    animationFrame: $foreign.animationFrame,
    withTime: $foreign.withTime
};
