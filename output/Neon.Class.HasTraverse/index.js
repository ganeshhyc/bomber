// Generated by purs version 0.11.7
"use strict";
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Neon_Class_HasApply = require("../Neon.Class.HasApply");
var Neon_Class_HasFromArray = require("../Neon.Class.HasFromArray");
var Neon_Class_HasMap = require("../Neon.Class.HasMap");
var Neon_Class_HasPure = require("../Neon.Class.HasPure");
var Neon_Class_HasToArray = require("../Neon.Class.HasToArray");
var Neon_Data = require("../Neon.Data");
var HasTraverse = function (traverse) {
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var listHasTraverse = new HasTraverse(function (dictHasApply) {
    return function (dictHasMap) {
        return function (dictHasPure) {
            return function (f) {
                return function (xs) {
                    if (xs instanceof Data_List_Types.Nil) {
                        return Neon_Class_HasPure.pure(dictHasPure)(Data_List_Types.Nil.value);
                    };
                    if (xs instanceof Data_List_Types.Cons) {
                        return Neon_Class_HasApply.apply(dictHasApply)(Neon_Class_HasMap.map(dictHasMap)(Data_List_Types.Cons.create)(f(xs.value0)))(traverse(listHasTraverse)(dictHasApply)(dictHasMap)(dictHasPure)(f)(xs.value1));
                    };
                    throw new Error("Failed pattern match at Neon.Class.HasTraverse line 25, column 19 - line 27, column 80: " + [ xs.constructor.name ]);
                };
            };
        };
    };
});
var lrrayHasTraverse = new HasTraverse(function (dictHasApply) {
    return function (dictHasMap) {
        return function (dictHasPure) {
            return function (f) {
                return function (x) {
                    return Neon_Class_HasMap.map(dictHasMap)(Neon_Class_HasToArray.toArray(Neon_Class_HasToArray.listHasToArray))(traverse(listHasTraverse)(dictHasApply)(dictHasMap)(dictHasPure)(f)(Neon_Class_HasFromArray.fromArray(Neon_Class_HasFromArray.listHasFromArray)(x)));
                };
            };
        };
    };
});
var laybeHasTraverse = new HasTraverse(function (dictHasApply) {
    return function (dictHasMap) {
        return function (dictHasPure) {
            return function (f) {
                return function (mx) {
                    if (mx instanceof Data_Maybe.Nothing) {
                        return Neon_Class_HasPure.pure(dictHasPure)(Data_Maybe.Nothing.value);
                    };
                    if (mx instanceof Data_Maybe.Just) {
                        return Neon_Class_HasMap.map(dictHasMap)(Data_Maybe.Just.create)(f(mx.value0));
                    };
                    throw new Error("Failed pattern match at Neon.Class.HasTraverse line 30, column 19 - line 32, column 45: " + [ mx.constructor.name ]);
                };
            };
        };
    };
});
module.exports = {
    traverse: traverse,
    HasTraverse: HasTraverse,
    lrrayHasTraverse: lrrayHasTraverse,
    listHasTraverse: listHasTraverse,
    laybeHasTraverse: laybeHasTraverse
};
