// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Foldable = require("../Data.Foldable");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Ring = require("../Data.Ring");
var Neon_Class_HasEqual = require("../Neon.Class.HasEqual");
var Neon_Data = require("../Neon.Data");
var Prelude = require("../Prelude");
var HasSubtract = function (subtract) {
    this.subtract = subtract;
};
var subtract = function (dict) {
    return dict.subtract;
};
var numberHasSubtract = new HasSubtract(function (y) {
    return function (x) {
        return x - y;
    };
});
var listHasSubtract = function (dictHasEqual) {
    return new HasSubtract(function (ys) {
        return function (xs) {
            return Data_List.filter(function (x) {
                return !Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (y) {
                    return Neon_Class_HasEqual.equal(dictHasEqual)(y)(x);
                })(ys);
            })(xs);
        };
    });
};
var intHasSubtract = new HasSubtract(function (y) {
    return function (x) {
        return x - y | 0;
    };
});
var arrayHasSubtract = function (dictHasEqual) {
    return new HasSubtract(function (ys) {
        return function (xs) {
            return Data_Array.filter(function (x) {
                return !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (y) {
                    return Neon_Class_HasEqual.equal(dictHasEqual)(y)(x);
                })(ys);
            })(xs);
        };
    });
};
module.exports = {
    subtract: subtract,
    HasSubtract: HasSubtract,
    arrayHasSubtract: arrayHasSubtract,
    intHasSubtract: intHasSubtract,
    listHasSubtract: listHasSubtract,
    numberHasSubtract: numberHasSubtract
};
