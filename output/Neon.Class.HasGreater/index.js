// Generated by purs version 0.11.7
"use strict";
var Data_List_Types = require("../Data.List.Types");
var Data_Ord = require("../Data.Ord");
var Neon_Class_HasEqual = require("../Neon.Class.HasEqual");
var Neon_Class_HasFromArray = require("../Neon.Class.HasFromArray");
var Neon_Data = require("../Neon.Data");
var Prelude = require("../Prelude");
var HasGreater = function (greater) {
    this.greater = greater;
};
var stringHasGreater = new HasGreater(function (y) {
    return function (x) {
        return x > y;
    };
});
var orderingHasGreater = new HasGreater(function (y) {
    return function (x) {
        return Data_Ord.greaterThan(Data_Ord.ordOrdering)(x)(y);
    };
});
var numberHasGreater = new HasGreater(function (y) {
    return function (x) {
        return x > y;
    };
});
var intHasGreater = new HasGreater(function (y) {
    return function (x) {
        return x > y;
    };
});
var greater = function (dict) {
    return dict.greater;
};
var listHasGreater = function (dictHasEqual) {
    return function (dictHasGreater) {
        return new HasGreater(function (ys) {
            return function (xs) {
                var $4 = {
                    xs: xs,
                    ys: ys
                };
                if ($4.xs instanceof Data_List_Types.Cons && $4.ys instanceof Data_List_Types.Nil) {
                    return true;
                };
                if ($4.xs instanceof Data_List_Types.Cons && $4.ys instanceof Data_List_Types.Cons) {
                    var $9 = Neon_Class_HasEqual.equal(dictHasEqual)($4.ys.value0)($4.xs.value0);
                    if ($9) {
                        return greater(listHasGreater(dictHasEqual)(dictHasGreater))($4.ys.value1)($4.xs.value1);
                    };
                    return greater(dictHasGreater)($4.ys.value0)($4.xs.value0);
                };
                return false;
            };
        });
    };
};
var charHasGreater = new HasGreater(function (y) {
    return function (x) {
        return x > y;
    };
});
var booleanHasGreater = new HasGreater(function (y) {
    return function (x) {
        return x > y;
    };
});
var arrayHasGreater = function (dictHasEqual) {
    return function (dictHasGreater) {
        return new HasGreater(function (ys) {
            return function (xs) {
                var toList = Neon_Class_HasFromArray.fromArray(Neon_Class_HasFromArray.listHasFromArray);
                return greater(listHasGreater(dictHasEqual)(dictHasGreater))(toList(ys))(toList(xs));
            };
        });
    };
};
module.exports = {
    greater: greater,
    HasGreater: HasGreater,
    arrayHasGreater: arrayHasGreater,
    booleanHasGreater: booleanHasGreater,
    charHasGreater: charHasGreater,
    intHasGreater: intHasGreater,
    listHasGreater: listHasGreater,
    numberHasGreater: numberHasGreater,
    orderingHasGreater: orderingHasGreater,
    stringHasGreater: stringHasGreater
};
